css    sass
1.预处理器
	sass就是早期的css预处理
		注：永远不要修改生成之后的css文件

2.sass的存储格式
	.scss 与 之前的css文件编写完全一致
		eg:  selector{
			声明;
		}
	.sass 没有大括号开始，末尾不需要分号结束

3.变量
	sass中的一个重要特性就是变量
	变量:经常改变的量
		把经常改变的或者经常使用的值存储在一个变量中，益于我们反复调用，利于我们后期的修改和维护

	声明变量的三部曲
		1 $符声明
		2 给变量赋予名字
		3 给变量赋予值

	变量有 普通变量 与 默认变量
		默认变量是在声明的 普通变量 之后添加 !default即可
		如果没有声明普通变量，就用默认变量，如果声明了普通变量就用普通变量
		注:普通 > 默认
		

	变量分类为 全局变量 与 局部变量
		注:先声明后调用
			全局变量是随时随地可以使用且被找到的变量
			局部变量是只有在当前区域块内可以找到


	如果变量接收是一个纯数字，那么我们就直接使用
		属性 : 变量;
	如果变量接收的是一个属性或者字符串，我们需要通过#{}插值的方式来使用
		eg:$bg:background;
		header{
			#{$bg}:orange;
		}
	

插值:#{}
好处:减少了代码的长度



混合宏   *****
	声明  @mixin
	调用  @include
	我们把重复的代码块封装在一个混合宏中,利于我们反复调用
	优点:可以通过传参的方式来实现不同的页面需求
	缺点:造成大段冗余代码块

继承
	声明  首先得有一个基类(选择器)
	调用  @extend
	特点  声明不调用，依旧生成css文件
	优点  减少了代码的重复量(群组选择器的方式出现)

占位符
	声明  %
	调用  @extend
	特点  声明不调用，不会编译在css文件中
	优点  减少了代码的重复量(群组选择器的方式出现)

总结:  Sass让css变得更加高效、可维护 



*****
嵌套
	选择器嵌套
		eg:

	属性嵌套
		注:属性嵌套用于复合属性；
			把相同的前缀提取出来，通过 冒号大括号 拼接 属性 
		eg:border-left-width:2px;
		   border-right-width:5px;
		   border:{
		   	  left-width:2px;
		   	  right-width:5px;
		   }
		注2: 遇 冒号: 转 - 

	伪类嵌套
	   & 表示当前父元素

sass中的注释
	多行注释/块注释   /* */ 
		特点:生成之后的css文件以注释掉的结果出现
	单行注释  //
		特点:注释掉的内容在生成的css文件中不可见


sass中的运算
	加
		注：如果两数相加都是纯数字，结果一定是纯数字
			如果有一个数字带单位，结果一定带单位

	减
		注: 两数相减 空格 隔开
		与上同理
	乘
		注: 带单位的不能乘以带单位的

	除
		注: 带单位的除以带单位的结果是 纯数字number(不带单位)
		注: 被除数 除以 除数 等于 商
			如果被除数没有单位，除数一定不能有单位
		注: 两数相除写在 小括号 中


颜色的运算
例如：#030102+020301=#050403
