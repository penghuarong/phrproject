css    sass
1.预处理器
	sass就是早期的css预处理
		注：永远不要修改生成之后的css文件

2.sass的存储格式
	.scss 与 之前的css文件编写完全一致
		eg:  selector{
			声明
		}
	.sass 没有大括号开始，末尾不需要分号结束

3.变量
	sass中的一个重要特性就是变量
	变量:经常改变的量
		把经常改变的或者经常使用的值存储在一个变量中，益于我们反复调用，利于我们后期的修改和维护

	声明变量的三部曲
		1 $符声明
		2 给变量赋予名字
		3 给变量赋予值

	变量有 普通变量 与 默认变量
		默认变量是在声明的 普通变量 之后添加 !default即可
		如果没有声明普通变量，就用默认变量，如果声明了普通变量就用普通变量
		注:普通 > 默认
		

	变量分类为 全局变量 与 局部变量
		注:先声明后调用
			全局变量是随时随地可以使用且被找到的变量
			局部变量是只有在当前区域块内可以找到


	如果变量接收是一个纯数字，那么我们就直接使用
		属性 : 变量;
	如果变量接收的是一个属性或者字符串，我们需要通过#{}插值的方式来使用
		eg:$bg:background;
		header{
			#{$bg}:orange;
		}
	

插值:
	#{}
	好处:减少了代码的长度



混合宏   *****
	声明  @mixin
	调用  @include
	我们把重复的代码块封装在一个混合宏中,利于我们反复调用
	优点:可以通过传参的方式来实现不同的页面需求
	缺点:造成大段冗余代码块

继承
	声明  首先得有一个基类(选择器)
	调用  @extend
	特点  声明不调用，依旧生成css文件
	优点  减少了代码的重复量(群组选择器的方式出现)

占位符
	声明  %
	调用  @extend
	特点  声明不调用，不会编译在css文件中
	优点  减少了代码的重复量(群组选择器的方式出现)

eg:  %name1{
		width:100%;
		height:20px;
	 }
	 %name2{
		width:50%;
		height:30px;
	 }

总结:  Sass让css变得更加高效、可维护 



*****
嵌套
	选择器嵌套
		eg:

	属性嵌套
		注:属性嵌套用于复合属性
			把相同的前缀提取出来，通过 冒号大括号 拼接 属性 
		eg:border-left-width:2px;
		   border-right-width:5px;
		   border:{
		   	  left-width:2px;
		   	  right-width:5px;
		   }
		注2: 遇 冒号: 转 - 

	伪类嵌套
		& 表示当前父元素/当前元素


sass中的注释
	多行注释/块注释   /* */ 
		特点:生成之后的css文件以注释掉的结果出现
	单行注释  //
		特点:注释掉的内容在生成的css文件中不可见


sass中的运算
	加
		注：如果两数相加都是纯数字，结果一定是纯数字
			如果有一个数字带单位，结果一定带单位

	减
		注: 两数相减 空格 隔开
		与上同理
	乘
		注: 带单位的不能乘以带单位的

	除
		注: 带单位的除以带单位的结果是 纯数字number(不带单位)
		注: 被除数 除以 除数 等于 商
			如果被除数没有单位，除数一定不能有单位
		注: 两数相除写在 小括号 中


颜色的运算



第二单元 meta标签
	<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no">
		viewport 获取浏览器的视口宽度
		device-width 设备宽度
		initial-scale 初始化缩放比例
		minimum-scale 最小缩放比例
		maximum-scale 最大缩放比例
		user-scalable=no 禁止用户缩放
			默认值 yes 开始状态

	<meta name="format-detection" content="telephone=no,address=no,email=no">
		format-detection 自动识别格式
		telephone=no 禁止自动拨号
		address=no 禁止发送地址/禁止自动跳转地图 
		email=no 禁止发送邮箱/邮件
			默认值yes 开启状态

	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
		优先考虑IE浏览器和谷歌浏览器
		以IE浏览器的最高模式进行渲染(最新版本)



css篇
	移动端中使用无衬线字体 eg: 微软雅黑
body {
    font-family:"Helvetica Neue",Helvetica,STHeiTi, sans-serif;/*使用无衬线字体*/}

a, img {
	-webkit-touch-callout: none;
	/*禁止长按链接与图片弹出菜单*/
}

html, body {
	-webkit-user-select: none;
	/*禁止选中文本*/
	user-select: none;
}
button,input,optgroup,select,textarea {
	-webkit-appearance:none;
	/*去掉webkit默认的表单样式*/
}

a,button,input,optgroup,select,textarea {
	-webkit-tap-highlight-color:rgba(0,0,0,0);
	/*去掉a、input和button点击时的蓝色外边框和灰色半透明背景*/}

input::-webkit-input-placeholder {
    color:#ccc; /*修改webkit中input的placeholder样式*/}

input:focus::-webkit-input-placeholder {
    color:#f00; /*修改webkit中focus状态下input的planceholder样式*/}
body {
	-webkit-text-size-adjust:100%!important;
	/*禁止IOS调整字体大小*/
}

input::-webkit-input-speech-button {
	display: none;/*隐藏Android的语音输入按钮*/}
浏览器的内核
-webkit-//谷歌 360 苹果
-moz-//火狐
-ms-//IE
-o-//opera



制作页面的单位
	px 绝对单位
	em 相对单位 相对于父元素
	rem 相对单位 相对于根元素 html
	谷歌默认字体大小是 16px
	1rem = 16px
	1rem = 100px   100 / 16 = 6.25 * 100% = 625%


第三单元
	***我们一般都定义为3D动画，因为3D可以开启硬件加速
	transform 设置或检索动画的变形/转换
		scale 缩放/比例
			scale()
				如果scale只写一个参数，则表示X轴与Y轴同时放大或者缩小
			scale(x,y)
				如果scale写参数，第一个值则表示X轴，第二个值则表示Y轴
			scale(X,Y,Z)
				第一个值表示X轴，第二个值表示Y轴，第三个值表示Z轴
			他也可以直接指定某一个轴向
				eg:scaleX() / scaleY() scaleZ()
				这时，参数必须写一个
			scale3D(X,Y,Z)

		translate 位移
			如果只写一个参数，则表示水平方向
			与上同理

		rotate 旋转
			单位 deg角度
			默认是按照 z轴旋转
			与上同理
			注意:指定当前rotate为3D时,必须指定四个参数
				语法:rotate3D(x,y,z,deg)
					第一个值表示X轴
					第二个值表示Y轴
					第三个值表示Z轴
					第四个值表示角度
					x,y,z的取值可以是 0 或者 1 ,0表示当前轴不旋转
					1表示旋转
					前三个值表示旋转的方向

		skew 倾斜/扭曲	
			与上同理
			****注:不支持3d动画




	transition 需要事件触发的平滑过渡动画
		transition-property 设置或检索对象参与过渡的属性
			none 不参与任何过渡
			property 参与过渡的属性
			all 所有过渡属性参与过渡  默认值(可省略)
		transition-duration 动画完成所需要的时间/动画执行的时间/动画运动的时长
			默认值 0
			单位 s秒  ms 毫秒

		transition-delay 动画的延迟时间
			单位 s  ms
		transition-timing-function 设置动画运动的类型
			ease 默认值 平滑过渡
			linear 匀速
			ease-in 从慢到快
			ease-out 从快到慢
			ease-in-out 从慢到快在到慢

perspective 指定观察者与「z=0」平面的距离，使具有三维位置变换的元素产生透视效果
	none： 不指定透视 
	<length>： 指定观察者距离「z=0」平面的距离，为元素及其内容应用透视变换。不允许负值 


transform-origin 设置或检索对象转换的原点位置/基点位置/中心点
	center center 默认值 中心点
	第一个值表示水平方向 第二个值表示垂直方向 等价于 50% 50%
		left top 关键字作为基点,左上角
		left bottom 左下角
		.....




animation 自执行动画(不需要事件触发，页面加在完成开始执行)
	定义自执行动画需要一个关键帧 @keyframes
		语法:@keyframes name{
				from{   // 0%
					起始帧
				}
				to{    // 100%
					结束帧
				}
			}
			注:百分比后面的%是必须的
			注:自执行动画有两帧是必须的，一个from，一个to，我们可以通过不同的百分比定义不同时间段的动画



	animation-name 引用动画/调用动画
	animation-duration 动画执行的时间/动画完成时间/动画所需时间
	animation-delay 动画的延迟时间
	animation-timing-function 动画运动的类型/运动的方式
		ease 默认值 平滑过渡
		linear 匀速
		ease-in 慢——快
		ease-out 快——慢
		ease-in-out 慢——快——慢 
	animation-iteration-count 动画执行的次数
		默认值  1
		number 几次
		infinite 无限循环
	animation-direction 动画运动的方向
		noraml 正方向运动  (从from开始到to结束) 默认值
		reverse 反向运动 (从to开始到from结束)
		alternate 正方向的持续运动(从from开始到to结束，再从to开始到from)
	animation-fill-mode 设置或检索对象动画的预留状态
		none 不设置任何对象动画之外的状态 默认值
		both 设置对象动画为开始或者结束时候的状态
		backwards 设置对象动画为开始时候的状态 (初始状态)
		forwards 设置对象动画为结束时候的状态
 	animation-play-state 检索或设置对象动画的状态 
 		running  运动 默认值
		paused  暂停
